using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.Collections.Generic;

namespace PackM8
{
    [TestClass]
    public class OutFeedUnitTest
    {
        OutFeed DUT;
        List<MessageFormat> messageFormats = new List<MessageFormat>();
        int inputPLULen = 6;
        int inputPPKLen = 5;

        int outputPLULen = 6;
        int outputPPKLen = 5;
        string _outheader = ""; 
        string _outfooter = ""; 

        string payloadHeader1 = "[DC4][SO][DC2][NAK][SYN][VT]";
        string payloadHeader2 = "[DC4][SO][DC2][NAK][SYN]";
        string qtyTag = "QTY: ";
        string qtySuf = "[FF]";
        int qtyLen = 2;

        String[] productCodes = new String[] {
            "000044",
            "000046",
            "000082",
            "000100",
            "000101",
            "000165",
            "000169",
            "000186",
            "000188",
            "000191",
            "000197",
            "000235",
            "000236",
            "000239",
            "000246",
            "000247",
            "000251",
            "000255",
            "000277",
            "000286",
            "000288",
            "000291",
            "000292",
            "000293",
            "000309",
            "000319",
            "000329",
            "000359",
            "000381",
            "000399",
            "000409",
            "000426",
            "000431",
            "000449",
            "000469",
            "000471",
            "000473",
            "000474",
            "000475",
            "000476",
            "000477",
            "000478",
            "000479",
            "000480",
            "000481",
            "000482",
            "000500",
            "000501",
            "000502",
            "000503",
            "000504",
            "000505",
            "000506",
            "000507",
            "000508",
            "000509",
            "000512",
            "000513",
            "000515",
            "000519",
            "000520",
            "000522",
            "000523",
            "000524",
            "000525",
            "000526",
            "000527",
            "000528",
            "000529",
            "000530",
            "000531",
            "000532",
            "000533",
            "000534",
            "000535",
            "000536",
            "000537",
            "000538",
            "000539",
            "000540",
            "000541",
            "000542",
            "000543",
            "000544",
            "000545",
            "000549",
            "000557",
            "000558",
            "000559",
            "000560",
            "000575",
            "000585",
            "000586",
            "000587",
            "000588",
            "000589",
            "000590",
            "000591",
            "000592",
            "000593",
            "000594",
            "000595",
            "000596",
            "000597",
            "000598",
            "000600",
            "000601",
            "000602",
            "000603",
            "000604",
            "000605",
            "000606",
            "000607",
            "000608",
            "000609",
            "000610",
            "000611",
            "000612",
            "000613",
            "000633",
            "000637",
            "000809",
            "000813",
            "000944",
            "000946",
            "001238",
            "001970",
            "002000",
            "002070",
            "002104",
            "002110",
            "002118",
            "002119",
            "002121",
            "002150",
            "002263",
            "002310",
            "002323",
            "002326",
            "002488",
            "002491",
            "002492",
            "002495",
            "002496",
            "002497",
            "002498",
            "002499",
            "002518",
            "002519",
            "004000",
            "004001",
            "004594",
            "005016",
            "005021",
            "005044",
            "005081",
            "005084",
            "005090",
            "005092",
            "005105",
            "005147",
            "005151",
            "005165",
            "005171",
            "005202",
            "005510",
            "005650",
            "005979",
            "006050",
            "006315",
            "006316",
            "006410",
            "007170",
            "008000",
            "008814",
            "008824",
            "008944",
            "008954",
            "009000",
            "009001",
            "009006",
            "009008",
            "009013",
            "009014",
            "009015",
            "009016",
            "009017",
            "009020",
            "009021",
            "009022",
            "009024",
            "009025",
            "009026",
            "009027",
            "009028",
            "009029",
            "009041",
            "009043",
            "009044",
            "009049",
            "009050",
            "009053",
            "009055",
            "009056",
            "009057",
            "009061",
            "009073",
            "009081",
            "009082",
            "009083",
            "009084",
            "009086",
            "009087",
            "009088",
            "009089",
            "009090",
            "009092",
            "009093",
            "009096",
            "009102",
            "009105",
            "009107",
            "009108",
            "009109",
            "009111",
            "009113",
            "009117",
            "009119",
            "009120",
            "009121",
            "009123",
            "009133",
            "009140",
            "009141",
            "009142",
            "009143",
            "009144",
            "009145",
            "009146",
            "009147",
            "009148",
            "009150",
            "009151",
            "009152",
            "009153",
            "009154",
            "009163",
            "009164",
            "009165",
            "009166",
            "009167",
            "009168",
            "009169",
            "009171",
            "009173",
            "009175",
            "009176",
            "009178",
            "009179",
            "009182",
            "009183",
            "009187",
            "009191",
            "009192",
            "009199",
            "009202",
            "009207",
            "009209",
            "009210",
            "009217",
            "009218",
            "009219",
            "009220",
            "009221",
            "009222",
            "009223",
            "009224",
            "009227",
            "009228",
            "009231",
            "009237",
            "009242",
            "009243",
            "009244",
            "009264",
            "009265",
            "009281",
            "009282",
            "009283",
            "009287",
            "009296",
            "009297",
            "009298",
            "009299",
            "009321",
            "009323",
            "009324",
            "009326",
            "009328",
            "009329",
            "009333",
            "009334",
            "009336",
            "009338",
            "009341",
            "009415",
            "009416",
            "009425",
            "009435",
            "009477",
            "009900",
            "009901",
            "009902",
            "009904",
            "009905",
            "009909",
            "009910",
            "009912",
            "009913",
            "009914",
            "009915",
            "009917",
            "009918",
            "009920",
            "019014",
            "019016",
            "019021",
            "019027",
            "019028",
            "019029",
            "019043",
            "019044",
            "019049",
            "019057",
            "019081",
            "019086",
            "019090",
            "019092",
            "019093",
            "019096",
            "019107",
            "019111",
            "019121",
            "019147",
            "019150",
            "019151",
            "019166",
            "019168",
            "019173",
            "019175",
            "019182",
            "019202",
            "019210",
            "019222",
            "019223",
            "019224",
            "019231",
            "019296",
            "019334",
            "020165",
            "022649",
            "026315",
            "026316",
            "026318",
            "026319",
            "029008",
            "029029",
            "029165",
            "029167",
            "029168",
            "029169",
            "029171",
            "029173",
            "029175",
            "029178",
            "029182",
            "029183",
            "029202",
            "029207",
            "029209",
            "029223",
            "029224",
            "029283",
            "029296",
            "039000",
            "039006",
            "039008",
            "039014",
            "039016",
            "039021",
            "039026",
            "039027",
            "039028",
            "039029",
            "039030",
            "039041",
            "039043",
            "039044",
            "039049",
            "039050",
            "039055",
            "039056",
            "039057",
            "039081",
            "039082",
            "039086",
            "039087",
            "039089",
            "039090",
            "039092",
            "039093",
            "039096",
            "039107",
            "039108",
            "039111",
            "039113",
            "039121",
            "039123",
            "039141",
            "039142",
            "039146",
            "039147",
            "039152",
            "039166",
            "039168",
            "039173",
            "039175",
            "039178",
            "039182",
            "039188",
            "039207",
            "039210",
            "039219",
            "039223",
            "039224",
            "039231",
            "039286",
            "039293",
            "039296",
            "039298",
            "039944",
            "049023",
            "049024",
            "049025",
            "049026",
            "049027",
            "049028",
            "049029",
            "049030",
            "059041",
            "060001",
            "060002",
            "060011",
            "060012",
            "061001",
            "061002",
            "061003",
            "061004",
            "061005",
            "061009",
            "061010",
            "061011",
            "061012",
            "061029",
            "061048",
            "061049",
            "061050",
            "061051",
            "061052",
            "070000",
            "070002",
            "070003",
            "070004",
            "080001",
            "080002",
            "080003",
            "080004",
            "380003",
            "380022",
            "380092",
            "380471",
            "380472",
            "380473",
            "380762",
            "381642",
            "384000",
            "384001",
            "385978",
            "385979",
            "388000",
            "388001",
            "400621",
            "400622",
            "400623",
            "400624",
            "400626",
            "400627",
            "400628",
            "400629",
            "400630",
            "400631",
            "400632",
            "400633",
            "400634",
            "400635",
            "400636",
            "400637",
            "400640",
            "400654",
            "400656",
            "400657",
            "400658",
            "400660",
            "400661",
            "400676",
            "400677",
            "500041",
            "500177",
            "649024" };
        String[] descriptions = new String[] {
            "Sausage Beef Thin (Single Layer)",
            "Sausage Beef Thin (min buy 2kg)",
            "Beef mince regular 500g",
            "Weight Check",
            "weight check",
            "Lamb Riblets(L)",
            "Forquarter Pack",
            "Pork Boneless Leg Roast- Small CRY",
            "Pork Boneless Leg Roast- Large CRY",
            "Veal Loin Medallion",
            "Porterhouse steak Eco 700",
            "Lamb Mid Loin Chops  7x5x40 tray",
            "Single Lamb Forequarter Chops 7x5x40 tray",
            "Hindquarter pack",
            "TRAY",
            "Angus Scotch Fillet Steak",
            "Veal Rack Roast(S)",
            "Bf Rib Rst Bonein(S)",
            "Veal Blade Roast",
            "Pork Boneless Shoulder Roast- Small CRY",
            "Pork Boneless Shoulder Roast- Large",
            "Sizzle Steak (S)",
            "Pork Sizzle Steak",
            "Sandwich STK (S)",
            "TRAY",
            "TRAY",
            "TRAY",
            "TRAY",
            "Veal Mini Roast (S)",
            "TRAY",
            "TRAY",
            "Lamb Mini Rst G&R(S)",
            "Lamb Mini Rst (S)",
            "TRAY",
            "TRAY",
            "Lamb & Cheese Rissoles",
            "Bf&Cheese Rissole(S)",
            "Bf&Vege Rissoles",
            "Hmstyle Rissole(S) ",
            "JO burger (L)",
            "JO meatball (S)",
            "JO VealFennelMeatball(S)",
            "Beef MiniBurgerGH(S)",
            "Lamb MiniBurgerGS(S)",
            "JO One Pan Brekky (S)",
            "JO P&V meatball mushroom sauce (S)",
            "Meatball Trad Bf(S)",
            "Meatball Italian(S)",
            "Lamb Mini Meatballs with Mint Sc",
            "Mtballs w sauce(S)",
            "Hmstyle Burger(L)",
            "Lamb Burger with Lime and Coriander",
            "Irish Stout Beef Burger",
            "Bf Pepper Steak (S)",
            "Bfly Lamb Ori Soy(S)",
            "Bflied Lamb H&G(S)",
            "Bflied Veal Pepper and Lemon",
            "Bflied Lamb M&R(S)",
            "Premium Mince 500g FW",
            "TRAY",
            "BBQ Combo Packs",
            "HS Beef Mince 400g",
            "Beef StirFry & Sauce(S)",
            "Beef Vegetable Kebab Kit",
            "bflied lamb G&L(S)",
            "HS mince 500g FW(S)",
            "HS mince 500RW",
            "HS burger(L)",
            "HS mince 1kg(L)",
            "Butterfly Beef PW(S)",
            "JO rolled lamb(L)",
            "JO shaw lamb(L)",
            "JO Moro Lamb(S)",
            "JO bolar(L)",
            "JO blkpepper bf(L)",
            "JO Lamb Skewers(L)",
            "JO BFlyBFSweetPepper(L)",
            "JO LambRumpTahini(S)",
            "JO BFlyLBLemonZest(L)",
            "JO VealScallopini(S)",
            "Beef stirfry 500g(S)",
            "DC Beef RegMinceS",
            "DC Beef RegMinceL",
            "JO Twin Lamb Rump (S)",
            "Beef Osso (L)",
            "Pork Rib Steak 700",
            "MV Rump TF (L)",
            "MV P/House (L)",
            "Blade Steak TF (L)",
            "BBQ Round TF (L)",
            "Pork Stir Fry 400g",
            "Lamb forequarter DC (L)",
            "LAMB F/Q DC (L)",
            "Lamb Stewing (L)",
            "Lamb Offcuts (L)",
            "Pork Midloin DC (L)",
            "Pork Rashers DC (S)",
            "Pork Cutlet DC(L)",
            "Pork stirfry DC (S)",
            "Pork Medalloins DC (S)",
            "Pork Scotch Fillet DC (S)",
            "Pork Aussie Ribs DC (L)",
            "Pork Belly Piece DC (S)",
            "Pork Fillet HS DC (S)",
            "Pork Mince DC (S)",
            "Aussie beef sausages GF",
            "Aussie beef sausages Bulk GF",
            "Aussie Beef Thick Sausage GF",
            "Aussie Beef Chipolatas",
            "Aussie Beef Sausage Mince(S)",
            "Aussie Beef HeartSmart Sausage GF",
            "Beef Reduce Fat Sausage",
            "Beef & Honey Flavoured Sausage",
            "Beef Tomato Onion Sausage GF",
            "Beef Herbs & Garlic Sausage GF",
            "Beef Cheese & Nacho Sausage",
            "MV Sausages GF",
            "MV Sausage Bulk Pack GF",
            "Aussie Beef Sausage 1.4kg",
            "Sizzle steak - 4 per carton?",
            "Angus Beef Burger",
            "Beef Rib Roast Standing",
            "MV bf scotch (S)",
            "Rib Stk B-in TC(S)",
            "Bf Spare Ribs(L)",
            "TRAY",
            "Little Chef Combat Ham",
            "Chili Burgers",
            "TRAY",
            "Aussie Beef Sausage Thin",
            "Ham Leg Half",
            "Angus Beef New York Steak R/W",
            "Angus Beef Mince R/W",
            "Angus Beef Stir Fry R/W",
            "Pk Loin B/L Seasoned(L)",
            "Beef Sausages Old English Style",
            "Pork Trotter",
            "Beef Sausages Thick",
            "Beef Sausages Thick (Min buy 2kg)",
            "Pig Head",
            "MV Bf Rump Stk(L)",
            "phouse stk MV(S)",
            "MV RumpStk1.25kg(L)",
            "MV RUMP2kg(L)",
            "MV Rump Steak(S)",
            "MV Bf Phouse Stk(L)",
            "MV Beef P.HouseStk1.25Kg(L)",
            "Angus Beef Rump Medallions (700)",
            "Angus Beef Rump Centre Cut",
            "4pack Burger(L)",
            "4 Pack Heartsmart",
            "Beef Sausages with Herb and Garlic",
            "Mince Prem(S)",
            "Mince HS(S)",
            "BF stirfry(S)",
            "BF Phouse ",
            "BF Tbone(S)",
            "BF fillet(S)",
            "BF Scotch(S)",
            "BF Rump(S)",
            "Pork Loin(S)",
            "Pork medal(S)",
            "Lamb cutlet(S)",
            "Lamb Loin(S)",
            "Lamb rack(S)",
            "Ham Leg Whole",
            "Ham Leg Half",
            "Eco Burger(L)",
            "Combat Ham Leg Half",
            "Stir fry lamb HS(S)",
            "Lamb shoulder stk(S)",
            "Kentucky Picnic Shoulder Roast",
            "Ham Shldr Semi B/Less",
            "8 pack Regular",
            "Beef Sausages with Tomato and Onion",
            "Beef and Honey Sausage",
            "Aussie Beef Choplatas",
            "Beef Choplatas",
            "Mince Veal (S)",
            "veal mince 400g(S)",
            "Mince Pork(S)",
            "Mince Lamb(S)",
            "Pork Mince Heart Smart 900",
            "Mince Regular(S)",
            "Mince Regular(L)",
            "Mince Premium (S)",
            "MV BeefRegMince1.5Kg(L)",
            "Mince Premium (L)",
            "HS Mince 500RW(S)",
            "Mince Extra Lean 1400(L)",
            "HS mince 500gFW (S)",
            "HS mince 1kg (S)",
            "Diced Veal HS (S)",
            "Diced Beef HS (S)",
            "Diced Pork HS (S)",
            "Diced Lamb HS(S)",
            "Stir Fry Veal HS (S)",
            "Stir Fry Pork HS (S)",
            "Stirfry Beef HS (S)",
            "Stir Fry Lamb HS (S)",
            "Bf Stroganoff(S)",
            "Veal Scalop(S)",
            "Veal schnitzel (L)",
            "Pork Schnitzel  DC(S)",
            "Beef Schnitzel(S)",
            "TRAY",
            "MSA Phouse LRG (S)",
            "Bf Phouse Stk(S)",
            "MSA Oyster stk (S)",
            "Bf blade BI 1.5kg(L)",
            "Bf T Bone Stk(L)",
            "Bf T Bone Stk(S)",
            "Blade Stk B In (S)",
            "blade stk B Less LRG(S)",
            "Blade Stk Boneless(S)",
            "Bf Fillet Stk (S)",
            "Bf Scotch Stk (S)",
            "Bf Rib Stk B/less(S)",
            "Bf BBQ Stk (S)",
            "Bf BBQ Stk (L)",
            "Bf Rump Stk(S)",
            "Bf Rump Stk(S)",
            "Bf Rump Stk HS(S)",
            "Beef Rump Steak Economy 1120",
            "Beef Rump Steak Economy 930B",
            "Beef Rump Point End Steak 7x5x30 tray",
            "Bf Chuck Stk(S)",
            "Bf Chuck Stk Lge(S)",
            "Beef Spare Ribs 900",
            "Bf Gravy(S)",
            "Sside Eye Stk(S)",
            "Lamb&Bf BBQ pack(S)",
            "Lamb Rump Steak  7x5x40 tray",
            "Beef BBQ Pack(S)",
            "TRAY",
            "B.B.Q. Packs Premium BT08-35",
            "Half Cut Beef Rump Steak 7x5x30 tray",
            "Beef Rib Steak 7x5x30 tray",
            "Pork Cutlets(L)",
            "Pork MLoin Chops(S)",
            "Pork Loin Chops",
            "Pork Rashers(S)",
            "Pork Medallion HS(S)",
            "Pork Fillet Extra Trim CRY",
            "Pork Scotch(S)",
            "Pk scallopini(S)",
            "lamb Neck(S)",
            "Lamb Stewing(S)",
            "Lamb Cutlets(L)",
            "Lamb Cutlets (S)",
            "Lamb 1/4Chops(L)",
            "Lamb 1/4Chops(L)",
            "Lamb Leg Chops(S)",
            "Lamb MLoin Chops(S)",
            "Lamb MLoin Chops(S)",
            "Lamb Shanks(L)",
            "Lamb Fillet HS(S)",
            "Lamb Cutlets HS(S)",
            "Lamb Cutlets HS(S)",
            "Lamb Leg Stk(S)",
            "Lamb Off Cuts(L)",
            "Veal T Bone Stk(S)",
            "Veal Osso Bucco(L)",
            "BF OSSOBUCCO(L)",
            "Roast Lamb Loin Boneless",
            "Rst Lamb Rack(S)",
            "Rst Lamb Rack HS(S)",
            "Rst Lamb Round(S)",
            "Rst Pork Rack(S)",
            "Bf Topside Rst (S)",
            "Bf Rump roast(S)",
            "Bf scotch Rst(S)",
            "RSTBF Silverside(L)",
            "BFVirginianRST(L)",
            "Topside Rst HS(L)",
            "Rst Lamb Legs(L)",
            "Rst Lamb Legs (Half)(L)",
            "Roast Pork Loin Boneless Small CRY",
            "Roast Pork Loin Boneless Large CRY",
            "MSA Bolar RST(L)",
            "Pk Scotch RST(S)",
            "Pot Roast",
            "Beef Fillet Whole CRY LARGE",
            "Bf Fillet HS SML(S)",
            "Mince Reg BULK(L)",
            "Mince Prem BULK(L)",
            "Lamb F/Qter Chops 1.5kg",
            "Lamb Loin Chops Min buy 1.5kg",
            "Roast Lamb Legs Twin Packs CRY",
            "TRAY",
            "Lamb Rump Stk(S)",
            "Lamb Rump Steak 1420",
            "Pork Spare Ribs(S)",
            "Lb chump chop(S)",
            "Beef Rump Steak Thick Cut 7x5x50 tray",
            "Beef Scotch Fillet Steaks Thick Cut 7x5x50 tray",
            "Beef Porterhouse Steak Thick Cut 7x5x50 tray",
            "Bf Casserole(S)",
            "Beef Schnitzel Crumbed Plain",
            "Beef Schnitzel Crumbed Parmigiana",
            "Porterhouse steak Eco 1120",
            "Pork Leg Bone In",
            "Pork Schnitzel Crumbed R/W",
            "TRAY",
            "BBQ Pack Family(L)",
            "Pork Rashers(S)",
            "Pk belly(S)",
            "Pork Loin Cutlets(S)",
            "Pork Rib Stk(S)",
            "Bulk MBalls (S)",
            "TD Pork Belly (S)",
            "TD Pork Mince (S)",
            "TD Pork Cutlet (S)",
            "TD Lamb Cutlet (S)",
            "TD L Cut let (S)",
            "TD Lamb Mince (S)",
            "TD L Rump St (S)",
            "TD B Rib STK TC (S)",
            "TD B P/House (S)",
            "TD B Fillet (S)",
            "TDB Scotch (S)",
            "TD Beef Mince (S)",
            "TD B Virginian (L)",
            "TD B TBone (S)",
            "Mince Regular 900",
            "Mince Premium Beef 900",
            "Mince Extra Lean 900",
            "Diced Beef TF",
            "Diced Pork Heart Smart",
            "Diced Extra Trim - Lamb TF",
            "Stir Fry Pork Heart Smart",
            "Beef Stir Fry TF",
            "Stir Fry Lamb TF",
            "Schnitzel Beef Heart Smart",
            "Beef Porterhouse Steak TF",
            "Beef Sirloin T Bone Steak TF",
            "Beef Fillet Steak TF",
            "Beef Scotch Fillet Steaks TF",
            "Beef Rib Fillet Steak Boneless TF",
            "Beef BBQ Steak TF",
            "Beef Rump Steak TF",
            "Beef Rump Steak Economy TF",
            "Beef Gravy TF",
            "Pork Mid Loin Chops TF",
            "Pork Rashers TF",
            "Pork Medallion Steak- Heart Smart TF",
            "Lamb Cutlets TF",
            "Lamb Forequarter Chops TF",
            "Lamb Mid Loin Chops TF",
            "Lamb Shanks TF",
            "Lamb Leg Steaks TF",
            "Roast Lamb Rack TF",
            "Roast Pork Rack TF",
            "Beef Topside Roast TF",
            "Roast Lamb Legs TF",
            "Roast Lamb Legs (Half) TF",
            "Roast Bolar Blade TF",
            "Lamb Rump Steak TF",
            "Pork Leg Bone In",
            "Lamb Riblets (S)",
            "Easy Carve Lamb Leg (L)",
            "StirFry Lamb HeartSSmart (S)",
            "Lamb Shoulder Steak (S)",
            "Lamb Neck Rosettes (S)",
            "Lamb Forquarter Pieces (L)",
            "Lamb Mince ",
            "Diced Lamb H/Smart",
            "Lamb Cutlets (S)",
            "Lamb Chops Forquarter (S)",
            "Lamb Chops Forquarter (L)",
            "Lamb Legs Chops (S)",
            "Lamb Mid Loin Chops (S)",
            "Lamb Mid Loin Chops (S)",
            "Lamb Shanks (L)",
            "Lamb Cutlets H/Smart (S)",
            "Lamb Leg Steak H/Smart (S)",
            "Lamb Offcuts (L)",
            "Roast Lamb Rack (S+liner)",
            "Roast Lamb Rack H/Smart (S)",
            "Roast Lamb Round H/Smart (S)",
            "Roast Lamb Leg (L)",
            "Roast Lamb Leg Half (L)",
            "Roast Lamb Leg Twin (S+liner)",
            "Lamb Rump Steak (S)",
            "Veal Mince Min 580g",
            "Pork Mince Min 570g",
            "Lamb Mince Min 570g",
            "Beef Mince Regular Min 500g",
            "Beef Mince Premium� Min 500g",
            "Beef Mince Heart Smart Min 500g",
            "Veal Diced Heart Smart Min 500g",
            "Beef Diced Heart Smart Min 530g",
            "Pork Diced H/Smart Min 470g",
            "Lamb Diced Heart Smart Min 540g",
            "TRAY",
            "Veal Stir Fry 530g",
            "Pork Stir Fry Heart�Smart Min 520g",
            "Beef Stir Fry Heart Smart Min 460g",
            "Lamb Stir Fry Heart Smart Min 490g",
            "Beef Stroganoff Heart Smart Min 520g",
            "Veal Schnitzel H/smart Min 500g",
            "Pork Schnitzel min 550g",
            "Beef Schnitzl H/Smart Min 500g",
            "MSA Ph (S)",
            "MSA Oyster(S)",
            "Beef T-bone Steak Min 280g",
            "Beef Blade Steak Bone In Min 910g",
            "MSA blade(S)",
            "MSA fillet(S)",
            "MSA bf scotch(S)",
            "Beef Rib Fillet Steak Min 480g",
            "Beef Round Steak BBQ 300g",
            "MSA Rump(S)",
            "Beef Rump Stk Center H/Smart 700 tray",
            "Beef Rump Steak Economy Min 410g",
            "Beef Rump Point End Steak�700 tray",
            "Beef Shin Steak Min 400g",
            "Beef S/Side Eye Stk H/Smart Min 470g,",
            "BBQ Pack 820g",
            "BBQ Pack 1.6kg",
            "Pork Loin Cutlets Min 440g",
            "Pork Chops Midloin Min 390g",
            "Pork Fillet Heart Smart Min 380g",
            "Lamb Frenched Cutlets Min 320g 900 tray",
            "Lamb Forequarter Chops Min 300g",
            "Lamb Midloin Chops Min 280g",
            "Lamb Shanks�Min� 780g",
            "Lamb Cutlets Heart Smart  Min 310g 900 tray",
            "Lamb Leg Steaks Heart Smart  Min 320g",
            "Roast Pork Leg Min 3kg",
            "Lamb Rack Roast Heart Smart Min 300g",
            "TRAY",
            "MSA Scotch(S)",
            "Lamb Leg min 1.4kg",
            "lamb Leg half min 810g",
            "MSA bolar(S)",
            "Roast Pork Shoulder Boned and Rolled Min 1.5kg",
            "MSA Sandwich STK(S)",
            "Lamb Rump Steak min 460 g",
            "Pork Spare Rib Min 510g",
            "MSA Bf rib(S)",
            "MV Rump Small",
            "MV Rump Large",
            "MV Porterhouse Small",
            "MV Porterlargehouse Large ",
            "MV Lamb Forquarter Chops",
            "MV Lamb Loin Chops",
            "MV Pork Loin Chops",
            "MV Pork Medallions",
            "CK B/P M/BALL (S)",
            "Butterfly Lamb Leg Garlic/Herb",
            "Butterfly Lamb Leg (Plain)",
            "Butterflied Beef Steak Mexican",
            "Chicken Sizzle Steak",
            "WW Deli Chicken Rissole Plain",
            "WW Deli Chicken and Cheese Rissole",
            "Mr Beaks Original Sausage",
            "Mr Beaks Spicy salsa Sausage",
            "Mr Beaks Smoky Chorizo Sausage",
            "MB Hot and spicy(S)",
            "MB original(S)",
            "MB Chorizo(S)",
            "Beak Burger (S)",
            "B&S classic burger",
            "Gold burger Shiraz(S)",
            "Gold burger Onion(S)",
            "Grill''d burger (S)",
            "BEAK meatball (S)",
            "GD AngusBeefBall(S)",
            "Reverine Beef Mince(S)",
            "Org Bf Schnitzel(S)",
            "org prem mince(S)",
            "org HS mince (S)",
            "Diced Goat",
            "Goat Leg",
            "Goat Sausage 450g FW",
            "Goat Shank",
            "TRAY",
            "TRAY",
            "TRAY",
            "TRAY",
            "TRAY",
            "TRAY",
            "TRAY",
            "TRAY",
            "TRAY",
            "TRAY",
            "TRAY",
            "TRAY",
            "TRAY",
            "TRAY",
            "Riverine Beef Nyk Stk TD",
            "Riverine Beef Rump Stk TD",
            "Riverine Beef Mince TD",
            "Riverine Beef Burger TD",
            "Natural Beef Rump Stk TD",
            "Natural Beef Scotch Stk",
            "Natural Beef TBone Stk",
            "Natural Beef Tpside Rst TD",
            "Natural Beef Stir Fry TD",
            "Natural Beef Diced TD",
            "Natural Beef Schnitzel TD",
            "Ntrl Beef Mince 85cl TD",
            "Ntrl Beef Mince 95cl TD",
            "Natural Lamb Loin Chop TD",
            "Natural Lamb Cutlet TD",
            "Natural Lamb Rack TD",
            "Natural Lamb Leg TD",
            "OB Pork Mince TD",
            "Classic Butchery Pork Cutlets",
            "Classic Butchery Pork Loin Medallion",
            "Northern Rivers Veal Schnitzel",
            "Natural Lamb Rack Denuded",
            "Natural Lamb Backstrap Denuded",
            "NR Veal Osso Bucco",
            "Lamb Shank",
            "CK B/P M/Ball (S)",
            "CK BF Oyster(S)",
            "MV Beef rump steak"
                    };

        private void InitDut()
        {
            SerialSettings tmpSettings = new SerialSettings()
            {
                PortName = "COM5"
            };
            DUT = new OutFeed(tmpSettings)
            {
                Header = _outheader,
                Footer = _outfooter,
                InputPLULength = inputPLULen,
                InputPPKLength = inputPPKLen,
                OutputPLULength = outputPLULen,
                OutputPPKLength = outputPPKLen
            };
            DUT.OutputMessage.Add(
                new MessageFormat(
                    payloadHeader1,
                    "",
                    qtyTag + qtySuf,
                    qtyLen));
            DUT.OutputMessage.Add(
                new MessageFormat(
                    payloadHeader2,
                    "",
                    qtyTag,
                    qtyLen));
        }

        
        [TestMethod]
        public void OutputFormatTest()
        {
            InitDut();
            string _plu = "123456";
            string _ppk = "14.59 ";
            string _description = "MQ 2s chimichangas";
            for (int x = 0; x < 2; x++ )
            {
                for (int i = 0; i < 111; i++)
                {
                    string output = DUT.OutputMessage[x].GetFormattedMessage(_plu, _ppk, i, _description);
                    string expected;
                    string tmpqty = qtyTag + i.ToString("D" + qtyLen.ToString());
                    if (x == 0)
                        expected = payloadHeader1 + _plu + "|" + _ppk + tmpqty + qtySuf + _description;
                    else
                        expected = payloadHeader2 + _plu + "|" + _ppk + tmpqty + _description;
                    Assert.AreEqual(expected, output);
                }
            }
        }

        [TestMethod]
        public void OutputMessage1Test()
        {
            InitDut();
            for (int i = 0; i < productCodes.Length; i++)
            {
                for (int y = 100; y < 100000; y+=98)
                {
                    for (int x = 0; x < 2; x++)
                    {
                        int _qty = y % 100;
                        string output = DUT.CreateOutputMessage(productCodes[i], y.ToString(), _qty, descriptions[i], x);
                        string expected;
                        string tmpqty = qtyTag + _qty.ToString("D" + qtyLen.ToString());

                        string _plu = String.Empty;
                        int startX = DUT.InputPLULength - DUT.OutputPLULength;
                        if (startX < 0) startX = 0;
                        if (startX > 0) _plu = new string('0', startX);
                        _plu = _plu + productCodes[i].Substring(startX, DUT.OutputPLULength);

                        decimal tmpPrice = Convert.ToDecimal(y);
                        tmpPrice = tmpPrice / 100;
                        string _ppk = tmpPrice.ToString("0.00");
                        if (_ppk.Length > DUT.OutputPPKLength)
                            _ppk = _ppk.Substring(_ppk.Length - DUT.OutputPPKLength, DUT.OutputPPKLength);
                        _ppk = _ppk + " ";

                        if (x == 0)
                            expected = payloadHeader1 + _plu + "|" + _ppk + tmpqty + qtySuf + descriptions[i];
                        else
                            expected = payloadHeader2 + _plu + "|" + _ppk + tmpqty + descriptions[i];
                        Assert.AreEqual(expected, output);
                    }
                }
            }

            string errMsg = "THIS IS AN ERROR MESSAGE";
            for (int x = 0; x < 2; x++)
            {
                string errPlu = "xxxxxx";
                string errPpk = "yyyyy";
                string output = DUT.CreateErrorOutputMessage(errPlu, errPpk, errMsg, x);
                string expected;
                if (x == 0)
                    expected = payloadHeader1 + errPlu + "|" + errPpk + errMsg;
                else
                    expected = payloadHeader2 + errPlu + "|" + errPpk + errMsg;
                Assert.AreEqual(expected, output);
            }
        }

        [TestMethod]
        public void ErrorOutputMessageTest()
        {
            InitDut();

        }
    }
}
